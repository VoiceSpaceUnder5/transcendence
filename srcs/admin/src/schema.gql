# ------------------------------------------------------
# THIS FILE WAS AUTOMATICALLY GENERATED (DO NOT MODIFY)
# ------------------------------------------------------

type Code {
  group: String!
  id: String!
  label_korean: String
  label_english: String
  created_at: DateTime!
  updated_at: DateTime!
}

"""
A date-time string at UTC, such as 2019-12-03T09:54:33Z, compliant with the date-time format.
"""
scalar DateTime

type Message {
  created_at: DateTime!
  updated_at: DateTime!
  id: Int!
  user: User!
  userId: Int!
  channelId: Int!
  textMessage: String!
}

"""
Chatting Channel Data
"""
type Channel {
  created_at: DateTime!
  updated_at: DateTime!
  id: Int!
  name: String!
  password: String
  type: Code!
  typeId: String!
  channelUsers: [ChannelUser]!
  messages: [Message]!
}

type ChannelUser {
  created_at: DateTime!
  updated_at: DateTime!
  id: Int!
  userId: Int!
  channelId: Int!
  roleId: String!
  role: Code!
}

"""
Relation data
"""
type Relation {
  created_at: DateTime!
  updated_at: DateTime!
  user_first_id: Int!
  user_second_id: Int!
  type: Code!
  typeId: String!
}

"""
User data
"""
type User {
  created_at: DateTime!
  updated_at: DateTime!
  id: Int!
  name: String!
  email: String
  profile_image: String
  profile_image_thumb: String
  profile_image_medium: String
  description: String
  authority: Code!
  authorityId: String!
  channelUsers: [ChannelUser!]!
  messages: [Message!]!
  relations(typeId: String!): [Relation]!
}

type Query {
  getChannelUsers: [ChannelUser]!
  getChannelUsersByChannelId(channelId: Int!): [ChannelUser!]!
  getMe: User!
  getUsers: [User]!
  getUserById(user_id: Int!): User!
  getUsersByIds(userIds: [Int!]!): [User!]!
  getUsersByName(user_name: String!): [User!]!
  getChannels: [Channel]!
  getChannelById(channelId: Int!): Channel!
  getParticipatingChannel(userId: Int!): [Channel]!
  getNotParticipatingChannel(userId: Int!): [Channel!]!
  getCodes: [Code]!
  getCodeByCode(code: String!): Code!
  getRelations: [Relation!]!
  getRelationsByUserIdTreatAsFirst(typeId: String, userId: Float!): [Relation!]!
  getRelation(user_first_id: Int!, user_second_id: Int!, typeId: Int): Relation!
}

type Mutation {
  createChannelUser(
    createChannelUserInput: CreateChannelUserInput!
  ): ChannelUser!
  deleteChannelUser(deleteChannelUserInput: DeleteChannelUserInput!): Boolean!
  createUser(createUserInput: CreateUserInput!): User!
  updateUser(updateUserInput: UpdateUserInput!, user_id: Int!): User!
  createChannel(createChannelInput: CreateChannelInput!, userId: Int!): Channel!
  updateChannel(
    updateChannelInput: CreateChannelInput!
    channelId: Int!
  ): Channel!
  createCode(createCodeInput: CreateCodeInput!): Code!
  createMessage(createMessageInput: CreateMessageInput!): Message!
  createRelation(createRelationInput: CreateRelationInput!): Relation!
  updateRelation(updateRelationInput: CreateRelationInput!): Relation!
}

input CreateChannelUserInput {
  channelId: Int!
  userId: Int!
  roleId: String!
}

input DeleteChannelUserInput {
  channelId: Int!
  userId: Int!
}

input CreateUserInput {
  id: Float!
  name: String!
  email: String
  profile_image: String
  authorityId: String = "UA1"
  description: String
}

input UpdateUserInput {
  profile_image_binary: String
  description: String
}

input CreateChannelInput {
  name: String!
  typeId: String!
  password: String
}

input CreateCodeInput {
  group: String!
  id: String!
  label_korean: String
  label_english: String
}

input CreateMessageInput {
  channelId: Float!
  userId: Float!
  textMessage: String!
}

input CreateRelationInput {
  user_first_id: Int!
  user_second_id: Int!
  typeId: String!
}
